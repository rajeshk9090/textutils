{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","backgroundColor","value","onChange","event","target","rows","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.50caccf3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            {/* <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link> */}\r\n                            {/* <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a> */}\r\n                        </li>\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-danger\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                    {/* <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n                        <button type=\"button\" class=\"btn btn-light\">Light</button>\r\n                        <button type=\"button\" class=\"btn btn-success\">Green</button>\r\n                        <button type=\"button\" class=\"btn btn-danger\">Red</button>\r\n                        <button type=\"button\" class=\"btn btn-dark\">Dark</button>\r\n                        <button type=\"button\" class=\"btn btn-primary\">Blue</button>\r\n                    </div> */}\r\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'TextUtils',\r\n    aboutText: 'About Us'\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was clicked..\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase!\", \"success\")\r\n    }\r\n    const handleLoClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase!\", \"success\")\r\n    }\r\n    const handleClearClick = ()=>{\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Text cleared!\", \"success\")\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"On Change..\");\r\n        setText(event.target.value)\r\n    }\r\n    const handleCopy = ()=>{\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to clipboard!\", \"success\")\r\n    }\r\n    const handleExtraSpaces = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"extra spaces removed!\", \"success\")\r\n    }\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <h4>{props.heading}</h4>\r\n            <div className=\"mb-3\">\r\n                <textarea style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'#042743'}} className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert To Uppercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert To Lowercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Textarea</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Textarea</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        </div> \r\n        <div className=\"container my-4\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <h4>Your text summary</h4>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} minutes to read</p>\r\n            <h3>Preview</h3>\r\n            <p>{text.length>0?text:\"Enter something in the textbox above to preview it here..\"}</p>\r\n        </div>\r\n        </>   \r\n    )\r\n}\r\n","import React, { useState } from 'react'\nimport './App.css';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import{\n//   BrowserRouter,\n//   Routes,\n//   Route,\n//   // Link\n// } from \"react-router-dom\"\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  // setInterval(() => {\n  //   document.title = \"Hello..\"\n  // }, 2000);\n  // setInterval(() => {\n  //   document.title = \"Hi..\"\n  // }, 1500);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    }) \n    setTimeout(() => {\n      setAlert(null);  \n    }, 1500);   \n  }\n\n  const toggleMode = ()=>{\n    if (mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\")\n      // document.title = 'TextUtils - Dark Mode'\n      // setInterval(() => {\n      //   document.title = \"Hello..\"\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"Hi..\"\n      // }, 1500);\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\")\n      // document.title = 'TextUtils - Light Mode'\n      // setInterval(() => {\n      //   document.title = \"Hello..\"\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"Hi..\"\n      // }, 1500);\n    }\n  }\n  return (\n  <>\n  {/* <BrowserRouter> */}\n  <Navbar title = \"TextUtils\" aboutText = \"About Us\" mode={mode} toggleMode={toggleMode} />\n  <Alert alert = {alert} />\n  <div className=\"container my-4\">\n    {/* <Routes>\n      <Route exact path=\"/about\" element={<About />} />    \n      <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading = \"Enter the text to analize below\" mode={mode} />} />   \n    </Routes>    */}\n    <TextForm showAlert={showAlert} heading = \"Enter the text to analize below\" mode={mode} />\n    {/* <About /> */}\n  </div>\n  {/* </BrowserRouter>     */}\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}